#!/bin/bash
set -e

[ "$PWD" == "$INIT_CWD" ] && [ "$(dirname "$(realpath "$0")")" == "$(realpath "scripts")" ] || {
    echo "Must use yarn workspace to call the $(basename "$0") script"
    exit 1
}

trap "{ set +x; } 2>/dev/null; printf \"\n\033[0;31m%s\n\033[0m\" \"Aborted!\" >&2; exit 1;" SIGINT SIGTERM

echo "endo args: $@"

if [[ \ $*\  == *\ --fresh\ * ]] || [[ \ $*\  == *\ -f\ * ]]; then
    set -x
    yarn run endo purge -f
    { set +x; } 2>/dev/null
fi

for arg in "$@"; do
    case "$arg" in
    purge)
        set -x
        yarn run endo purge -f
        ;;
    setup-tcp-networking)
        set -x
        yarn run endo eval '`127.0.0.1:54321`' -n tcp-netstring-json-captp0-host-port
        yarn run endo make --powers AGENT -n tcp --UNCONFINED ../daemon/src/networks/tcp-netstring.js
        yarn run endo eval 'E(self).move([`tcp`],[`NETS`,`tcp`])' self:AGENT
        ;;
    setup-app-wallet)
        set -x
        yarn run endo install ../familiar-chat/src/index.js --powers AGENT --listen 0 --name app-wallet
        ;;
    setup-game-deck-agent)
        set -x
        yarn run endo mkhost handle-deck agent-deck
        yarn run endo make src/deck.js --powers agent-deck --name deck-new
        ;;
    setup-game-agent)
        set -x
        yarn run endo mkhost handle-game agent-game
        yarn run endo make src/game.js --powers agent-game --name agent-game.game
        ;;
    setup-game-cards)
        set -x
        yarn run endo make src/cards/firmament.js -n card-firmament
        yarn run endo make src/cards/lost-and-afraid.js -n card-lost
        ;;
    setup-game-weblet)
        set -x
        yarn run endo bundle --name bundle-game src/weblet.js
        yarn run endo install --bundle bundle-game --powers AGENT --listen 12345 --alias 1kce --name app-game
        ;;
    -f | --fresh) ;;
    *)
        echo "Unknown argument: $arg"
        exit 1
        ;;
    esac

    { set +x; } 2>/dev/null
done
